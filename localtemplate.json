{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify a location for the resources."
      }
      
      }
    },
    "functions": [],
    "variables": {
        "storageAccountName": "[concat('storage1', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
      "name": "linkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "linkedtemplate.json"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
	{
        "name": "mynewvm-PublicIP",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "PublicIPAddress"
        },
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "dnsSettings": {
                "domainNameLabel": "[toLower('mynewvm')]"
            }
        }
    },
    {
        "name": "mynewvm-nsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2018-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
			"securityRules": [
                {
                    "name": "nsgRule1",
                    "properties": {
                        "description": "description",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
    {
        "name": "mynewvm-VirtualNetwork",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
		"location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', 'mynewvm-nsg')]"
        ],
        "tags": {
            "displayName": "mynewvm-VirtualNetwork"
        },
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "mynewvm-VirtualNetwork-Subnet",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "networkSecurityGroup": {
							"id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'mynewvm-nsg')]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "mynewvm-NetworkInterface",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', 'mynewvm-PublicIP')]",
            "[resourceId('Microsoft.Network/virtualNetworks', 'mynewvm-VirtualNetwork')]"
        ],
        "tags": {
            "displayName": "mynewvm Network Interface"
        },
		"properties": {
            "ipConfigurations": [
                {
                    "name": "ipConfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'mynewvm-PublicIP')]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',          'mynewvm-VirtualNetwork', 'mynewvm-VirtualNetwork-Subnet')]"
                        }
                    }
                }
            ]
        }
		},
    {
        "name": "mynewvm",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', toLower('mynewstoraz012'))]",
            "[resourceId('Microsoft.Network/networkInterfaces', 'mynewvm-NetworkInterface')]"
        ],
        "tags": {
            "displayName": "mynewvm"
        },
        "properties": {
            "hardwareProfile": {
                "vmSize": "Standard_B1s"
            },
            "osProfile": {
                "computerName": "mynewvm",
                "adminUsername": "adminUsername",
                "adminPassword": "Random1234$$"
            },
			"storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2012-R2-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "mynewvmOSDisk",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', 'mynewvm-NetworkInterface')]"
                    }
                ]
            },
			"diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower('mynewstoraz012'))).primaryEndpoints.blob]"
                }
            }
        }
    }],
    "outputs": {}
}


